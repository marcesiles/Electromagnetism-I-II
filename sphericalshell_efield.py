# -*- coding: utf-8 -*-
"""sphericalshell_Efield.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ja56VI9MmolC8ZeIcI_FvIlJ_DYRmC8g
"""

import numpy as np
import matplotlib.pyplot as plt

# Parameters
k = 0.5e-9  # charge density constant (C/m^3)
epsilon_0 = 8.85e-12  # permittivity of free space (C^2 / N m^2)
a = 0.05  # inner radius (in meters)
R_in = a
R_out = 2 * a  # outer radius (in meters)

# Piecewise definition for |E|
def E(r):
    if r < R_in:
        return 0  # No electric field inside the shell
    elif R_in <= r < R_out:
        return (k * (r - R_in)) / (epsilon_0 * r**2)  # Field inside the shell
    else:
        return (k * (R_out - R_in)) / (epsilon_0 * r**2)  # Field outside the shell

# Generate radial distances
r_values = np.linspace(0, 4 * a, 1000)

# Calculate electric field values
E_values = [E(r) for r in r_values]

# Plotting the electric field
plt.figure(figsize=(8, 6))
plt.plot(r_values, E_values, label="|E|", color='b')
plt.axvline(x=R_in, color='r', linestyle='--', label="Radio interno (a)")
plt.axvline(x=R_out, color='g', linestyle='--', label="Radio externo (b)")
plt.xlabel('Distancia radial (m)')
plt.ylabel('Campo eléctrico (N/C)')
plt.title(r'$\left|E\right|$ para un cascarón esférico volumétrico con $\rho = \frac{k}{r^2}$')
plt.legend()
plt.grid(True)
plt.show()

